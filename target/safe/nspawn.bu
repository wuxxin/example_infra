systemd:
  units:
    # enable nspawn hello-nspawn service
    - name: systemd-nspawn@hello-nspawn.service
      enabled: true

storage:
  files:
    # nspawn provision environment
    - path: /etc/nspawn/environment/hello-nspawn.env
      mode: 0600
      contents:
        inline: |
          # NSPAWN_OSNAME, NSPAWN_PROVISION are used by nspawn-provision@.service
          # NSPAWN_TRAEFIK is used by systemd-nspawn@.d/traefik.conf
          # NSPAWN_PROVISION is pasted as STDIN to nspawn.provision.sh
          # ##IPADDR## is replaced inside NSPAWN_TRAEFIK with the current machine ip
          NSPAWN_OSNAME=debian-bookworm
          NSPAWN_PROVISION="
          # ---BEGIN OPENSSH AUTHORIZED KEYS---
          {{ AUTHORIZED_KEYS|indent(10) }}
          # ---END OPENSSH AUTHORIZED KEYS---
          "
          NSPAWN_TRAEFIK="
          http:
            routers:
              hello-nspawn:
                rule: Host(\`hello-nspawn.{{ HOSTNAME }}\`)
                entrypoints: https
            services:
              hello-nspawn:
                loadBalancer:
                  servers:
                    - url: http://##IPADDR##:80/
          "

    # nspawn machine execution settings
    - path: /etc/systemd/nspawn/hello-nspawn.nspawn
      contents:
        inline: |
          [Exec]
          Environment=TEST=true

    # nspawn machine provision script
    - path: /etc/nspawn/build/hello-nspawn/nspawn.provision.sh
      mode: 0755
      contents:
        inline: |
          #!/usr/bin/env bash
          if test "$1" != "--yes"; then echo "Error, missing arg '--yes'; exit 1; fi
          shift
          # get stdin, save for later
          stdin=$(cat -)
          
          # create a new set of openssh-server host keys
          DEBIAN_FRONTEND=noninteractive dpkg-reconfigure --force openssh-server

          # create user, copy skeleton files
          USERNAME="user"
          HOME="/home/$USERNAME"
          adduser --disabled-password --gecos ",,," --home "$HOME" "$USERNAME" || true
          cp -r /etc/skel/. "$HOME/."
          install -o "$USERNAME" -g "$USERNAME" -m "0700" -d "$HOME/.ssh"
          
          # write authorized_keys if supplied
          authorized_keys=""
          head='# ---BEGIN OPENSSH AUTHORIZED KEYS---'
          bottom='# ---END OPENSSH AUTHORIZED KEYS---'
          if echo "$stdin" | grep -qPz "(?s)$head.*$bottom"; then
            authorized_keys=$(echo "$stdin" | awk "/$head/,/$bottom/")
          fi
          echo "$authorized_keys" >"$HOME/.ssh/authorized_keys"
          chown "$USERNAME:$USERNAME" "$HOME/.ssh/authorized_keys"
          chmod "0600" "$HOME/.ssh/authorized_keys"
          
          # install nginx and make index.html available on port 80
          DEBIAN_FRONTEND=noninteractive apt-get install --yes nginx
          cat > /var/www/index.html <<"EOF"
          <!DOCTYPE html>
          <html>
          <head>
            <style>pre { font-family: monospace; white-space: pre-wrap; }</style>
          </head>
          <body>
            <pre>
                  ><(((((°>
                                ><(((°>
                  ><((((°>
              <°)))><            ><(((((°>
                            <°))><
                      <°)))><         <')))))><
                Hello from a NSpawn Container!
            </pre>
          </body>
          </html>
          EOF
